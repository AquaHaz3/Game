
I. <name of segment> segment <Выравнивание> <Объединение>

Выравнивание:

1) byte
2) word (Выравнивание кратно 2 байтам)
3) para (Выравнивание 16 байтам)
4) page (Выравнивание по 256 байтам)

Объединение:

1) public - конкатенация одноимённых сегментов
2) сommon - наложение от-но общего сегментного адреса
3) stack - область памяти для стэка (+ public)
4) memory - самый конец программы (.exe binary)
5) AT [выражение] - генерирует абслютные адреса

II.  <name of segment> ends
 - обозначение конца сегмента

III. assume <seg register>:<name of segment>, ...
 - привязка имени сегмента к сегментному регистру
    assume nothing
 - отмена всех привязок

IV. <name of group> group <name of 1st segment> <name of 2nd segment> ... 
    - объединение нескольких сегментов в группу, обращение по общему адресу началу группы

V. {db, dw, dd, dq} - вставка в сегмент данных {byte, int16, int32, int64}

** ASM

Режим адресации:
 - способ нахождения данного закодированного в операнде, где находится значение, с которым должна хранистя инструкция
 1) неявный режим адресации: способ нахождения данного, без указания некоторого адреса, т.к. он указан в самой инструкции (пример CLC, MUL bh)
 2) непосредсвенный режим (прямое указание константы) (пример mov ah, 5)
 3) Прямой (абслютный) (пример: mov dx, [label1]) 
 4) Регистровый: (mov ax, dx) 
 5) Косвенный регистровый: mov [di], 0; т.е. мы берём численный адрес из регистра
 6) Регистровый относительный: mov ax, [bx + 23]; 23 - числовое смещение, а в bx лежит числовой адрес (именно bx)
 7) Базовый индексный: mov ax, [bx + di]; bx - базовый регистр, di - индексный регистр
 8) Относительный базовый индексный: mov ax, [bx + si + 31]; bx - базовый, si - индексный, 31 - числовое смещение


Режимом адрес переходов - называется способ нахождения адреса, куда передаётся управления

 1) Внутри сегментый короткий, режим адресации:
 - способ РА перехода, при котором адрес перехода = сумме IP(instruction pointer) и однобайтового смещения из кода команды
 - пример: (JMP 2h -> IP = IP + 2), (JMP label1 -> IP = IP + (label1 - IP))
 2) Внутрисегментный прямой: 
 - адрес цели расположен в команде
 - пример: (JMP <address>) 
 3) Внутрисегментный косвенный: 
 - при котором адрес цели записан в регистре или ячейке памяти адресуемого с помощью любого РА данных
 - пример (JMP [bx] берём из bx, ячейку, а оттуда адресс), (JMP ax, в регистре лежит адрес)
 4) Межсегментный прямой:
 - это такой РА, при котором длинный указатель в команде
 - пример (OP IP-new CS-new) : ()
 5) Межсегментный косвенный

***************************************

Группы команд:

1. Команды пересылки данных (mov, ...)
2. Арифметические (add, sub, mul, div, ...)
3. Логические команды (and, or, xor, ...)
4. Команды сдвигов
5. Команды ветвеления и циклов
6. Команды ввода-вывода (для внешних устройств)
7. Команды вызова функции (call, ret)
8. Команды операции со стеком (push, pop)
9. Специальные команды ...
0x2312